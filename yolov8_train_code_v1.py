# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HNCDIPTARQk2X73YlNxu_fEWfDEK2ZeA
"""

!pip install ultralytics

from ultralytics import YOLO

model = YOLO('yolov8n.pt')

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="d9vG6YC3ZBfSEdq9KIuR")
project = rf.workspace("final-project-dys3w").project("bottle-detection-5")
dataset = project.version(1).download("yolov8")

results = model.train(data='/content/datasets/data.yaml', epochs=30)

model = YOLO('/content/runs/detect/train/weights/best.pt')

results = model('/content/IMG_2554.JPG')

from PIL import Image

def show_img(results, dir):
  for result, i in zip(results, range(len(results))):
    for part in result:
      im_array = part.plot()  # plot a BGR numpy array of predictions
      im = Image.fromarray(im_array[..., ::-1])  # RGB PIL image
      im.show()  # show image
      im.save(f'{dir}/result{i}.jpg')

import cv2
import os

def load_images_from_folder(dir):
    images = []
    for filename in os.listdir(dir):
        img = cv2.imread(os.path.join(dir,filename))
        if img is not None:
            images.append(img)
    return images

test_img_dir = '/content/test_images'
test_imgs = load_images_from_folder(test_img_dir)

def detect_imgs(imgs):
  results = []
  for img in imgs:
    result = model(img)
    results.append(result)
  return results

results = detect_imgs(test_imgs)

show_img(results, '/content/results_imgs')